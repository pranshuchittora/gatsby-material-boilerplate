{"version":3,"sources":["webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/components/utils/Image.js","webpack:///./src/components/NavBar/index.js","webpack:///./src/pages/index.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js"],"names":["StaticQueryContext","React","createContext","StaticQuery","props","react_default","a","createElement","Consumer","staticQueryData","data","query","render","children","propTypes","PropTypes","object","string","isRequired","func","Image","gatsby_browser_entry_StaticQuery","gatsby_image_default","fluid","placeholderImage","childImageSharp","_2011440971","DenseAppBar","classes","className","root","AppBar_default","position","Toolbar_default","variant","IconButton_default","menuButton","color","aria-label","Menu_default","Typography_default","withStyles","flexGrow","marginLeft","marginRight","IndexPage","Fragment","NavBar","index_es","utils_Image","m","module","exports","require","default","ProdPageRenderer","_ref","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape"],"mappings":"8IAYMA,gBAAqBC,IAAMC,cAAc,KAEzCC,EAAc,SAAAC,GAAK,OACvBC,EAAAC,EAAAC,cAACP,EAAmBQ,SAApB,KACG,SAAAC,GACC,OACEL,EAAMM,MACLD,EAAgBL,EAAMO,QAAUF,EAAgBL,EAAMO,OAAOD,MAEtDN,EAAMQ,QAAUR,EAAMS,UAC5BT,EAAMM,KAAON,EAAMM,KAAKA,KAAOD,EAAgBL,EAAMO,OAAOD,MAGvDL,EAAAC,EAAAC,cAAA,uCA4BfJ,EAAYW,UAAY,CACtBJ,KAAMK,IAAUC,OAChBL,MAAOI,IAAUE,OAAOC,WACxBN,OAAQG,IAAUI,KAClBN,SAAUE,IAAUI,4BC1BPC,EAhBD,SAAChB,GAAD,OACZC,EAAAC,EAAAC,cAACc,EAAD,CACEV,MAAK,aAWLC,OAAQ,SAAAF,GAAI,OAAIL,EAAAC,EAAAC,cAACe,EAAAhB,EAAD,CAAKiB,MAAOb,EAAKc,iBAAiBC,gBAAgBF,SAZpEb,KAAAgB,iHCGF,SAASC,EAAYvB,GAAO,IAClBwB,EAAYxB,EAAZwB,QACR,OACEvB,EAAAC,EAAAC,cAAA,OAAKsB,UAAWD,EAAQE,MACtBzB,EAAAC,EAAAC,cAACwB,EAAAzB,EAAD,CAAQ0B,SAAS,UACf3B,EAAAC,EAAAC,cAAC0B,EAAA3B,EAAD,CAAS4B,QAAQ,SACf7B,EAAAC,EAAAC,cAAC4B,EAAA7B,EAAD,CACEuB,UAAWD,EAAQQ,WACnBC,MAAM,UACNC,aAAW,QAEXjC,EAAAC,EAAAC,cAACgC,EAAAjC,EAAD,OAEFD,EAAAC,EAAAC,cAACiC,EAAAlC,EAAD,CAAY4B,QAAQ,KAAKG,MAAM,WAA/B,kCASVV,EAAYb,UAAY,CACtBc,QAASb,IAAUC,OAAOE,YAGbuB,2BApCA,CACbX,KAAM,CACJY,SAAU,GAEZN,WAAY,CACVO,YAAa,GACbC,YAAa,KA8BFH,CAAmBd,UC1BnBkB,UAZG,kBAChBxC,EAAAC,EAAAC,cAACF,EAAAC,EAAMwC,SAAP,KACEzC,EAAAC,EAAAC,cAACwC,EAAD,MACA1C,EAAAC,EAAAC,cAACyC,EAAA,EAAD,CAAMnB,UAAU,cACdxB,EAAAC,EAAAC,cAACyC,EAAA,EAAD,KACE3C,EAAAC,EAAAC,cAAC0C,EAAD,CAAOpB,UAAU,qBAEnBxB,EAAAC,EAAAC,cAACyC,EAAA,EAAD,CAAgBX,MAAM,oCCd5B,IAAsBa,EAKpBC,EAAOC,SALaF,EAKWG,EAAQ,OALRH,EAAEI,SAAYJ,qrDCMzCK,EAAmB,SAAAC,GAAkB,IAAfC,EAAeD,EAAfC,SACpBC,EAAgBC,UAAOC,4BAA4BH,EAASI,UAClE,OAAO5D,IAAMM,cAAcuD,IAApBC,OAAAC,OAAA,CACLP,WACAC,iBACGA,EAAcO,QAIrBV,EAAiBzC,UAAY,CAC3B2C,SAAU1C,IAAUmD,MAAM,CACxBL,SAAU9C,IAAUE,OAAOC,aAC1BA,YAGUqC","file":"component---src-pages-index-js-031a442ea18cccf39a6f.js","sourcesContent":["import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","import React from \"react\"\nimport { StaticQuery, graphql } from \"gatsby\"\nimport Img from \"gatsby-image\"\n\n/*\n * This component is built using `gatsby-image` to automatically serve optimized\n * images with lazy loading and reduced file sizes. The image is loaded using a\n * `StaticQuery`, which allows us to load the image from directly within this\n * component, rather than having to pass the image data down from pages.\n *\n * For more information, see the docs:\n * - `gatsby-image`: https://gatsby.dev/gatsby-image\n * - `StaticQuery`: https://gatsby.dev/staticquery\n */\n\nconst Image = (props) => (\n  <StaticQuery\n    query={graphql`\n      query {\n        placeholderImage: file(relativePath: { eq: \"gatsby-astronaut.png\" }) {\n          childImageSharp {\n            fluid(maxWidth: 300) {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n      }\n    `}\n    render={data => <Img fluid={data.placeholderImage.childImageSharp.fluid} />}\n  />\n)\nexport default Image\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { withStyles } from \"@material-ui/core/styles\"\nimport AppBar from \"@material-ui/core/AppBar\"\nimport Toolbar from \"@material-ui/core/Toolbar\"\nimport Typography from \"@material-ui/core/Typography\"\nimport IconButton from \"@material-ui/core/IconButton\"\nimport MenuIcon from \"@material-ui/icons/Menu\"\n\nconst styles = {\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginLeft: -18,\n    marginRight: 10,\n  },\n}\n\nfunction DenseAppBar(props) {\n  const { classes } = props\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Toolbar variant=\"dense\">\n          <IconButton\n            className={classes.menuButton}\n            color=\"inherit\"\n            aria-label=\"Menu\"\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\" color=\"inherit\">\n            Gatsby Material Boilerplate\n          </Typography>\n        </Toolbar>\n      </AppBar>\n    </div>\n  )\n}\n\nDenseAppBar.propTypes = {\n  classes: PropTypes.object.isRequired,\n}\n\nexport default withStyles(styles)(DenseAppBar)\n","import React from \"react\"\nimport Image from \"../components/utils/Image\"\nimport { LinearProgress, Card, CardContent } from \"@material-ui/core\"\n\nimport NavBar from \"../components/NavBar\"\nimport \"../style/index.css\"\n\nconst IndexPage = () => (\n  <React.Fragment>\n    <NavBar />\n    <Card className=\"rotate-div\">\n      <CardContent>\n        <Image className=\"rotate-infinite\" />\n      </CardContent>\n      <LinearProgress color=\"primary\" />\n    </Card>\n  </React.Fragment>\n)\n\nexport default IndexPage\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n"],"sourceRoot":""}